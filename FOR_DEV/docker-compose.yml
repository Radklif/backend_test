version: "3.8"

services:

  postrgres:
    container_name: postgres_dev
    image: postgres:14-alpine
    env_file:
      - .env
    volumes:
#      - ./database/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
      - pg_database:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    container_name: morfis_backend_dev
    image: hub.morfis.ru/morfis_backend:dev
    volumes:
      - ./static/:/app/static
      - ./media/:/app/media
    env_file:
      - .env
    expose:
      - "8000"
    command: sh -c "
      ./manage.py collectstatic --no-input
      && ./manage.py migrate
      && ./manage.py loaddata ./fixtures/*.json
      && gunicorn --bind :8000 --workers 3 app.wsgi"
    depends_on:
      - postrgres

  backend_v2:
    container_name: morfis_backend_v2
    image: hub.morfis.ru/morfis_backend_v2
    volumes:
      - ./static/:/app/static
      - ./media/:/app/media
    env_file:
      - .env
    expose:
      - "6000"
    command: sh -c "
      ./manage.py collectstatic --no-input
      && ./manage.py migrate
      && ./manage.py loaddata ./fixtures/*.json
      && gunicorn --bind :6000 --workers 3 app.wsgi"

  frontend:
    container_name: morfis_frontend_dev
    image: hub.morfis.ru/morfis_frontend:dev
    depends_on:
      - backend

  web:
    container_name: morfis_backend_web_dev
    image: nginx:1.19.8-alpine
    volumes:
      - ../nginx:/etc/nginx/templates
      - ./logs:/var/log/nginx
      - ./static/:/var/www/static
      - ./media/:/var/www/media
    ports:
      - "127.0.0.1:3000:8081"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=8081
      - BACKEND_HOST=morfis_backend_dev
      - BACKEND_PORT=8000
      - BACKEND_HOST2=morfis_backend_v2
      - BACKEND_PORT2=6000     
      - FRONTEND_HOST=morfis_frontend_dev
      - FRONTEND_PORT=8080
    depends_on:
      - frontend
volumes:
  pg_database:
